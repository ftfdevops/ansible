---
- hosts: all
  become: yes
  vars_files:
    - secret.yaml
  tasks:
    - name: Cria a rede externa se ainda n√£o existir
      shell: docker network ls | grep -q 'node_js_default' || docker network create --driver=overlay node_js_default

    - name: Para a stack
      shell: docker stack down node_js

    - name: Remove a imagem antiga do cache do Swarm
      shell: docker image rm -f dockerimages.ddns.net/fjapi/nodex64:latest

    - name: Baixa a nova imagem
      shell: docker pull dockerimages.ddns.net/fjapi/nodex64:latest

    - name: Redeploy da stack com a nova imagem
      shell: docker stack deploy -c docker-compose.yml node_js

    - name: Verifica o resultado do deploy no Swarm
      shell: docker service ls | grep 'node_js' | grep -v 'COMPLETE' | grep -v 'Shutdown' | grep -v 'Rejected'
      register: deploy_result
      ignore_errors: true

    - name: Envia mensagem para o Telegram em caso de erro
      uri:
        url: "https://api.telegram.org/bot{{ telegram_token }}/sendMessage"
        method: POST
        body_format: json
        body:
          chat_id: 6632854362
          text: "Erro ao submeter a imagem. Verifique os logs para mais detalhes."
        status_code: 200
      when: deploy_result.stdout != ''

    - name: Envia mensagem para o Telegram em caso de sucesso
      uri:
        url: "https://api.telegram.org/bot{{ telegram_token }}/sendMessage"
        method: POST
        body_format: json
        body:
          chat_id: 6632854362
          text: "Imagem submetida com sucesso"
        status_code: 200
      when: deploy_result.stdout == ''











